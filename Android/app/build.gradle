apply plugin: 'com.android.application'

android {
    compileSdkVersion 31
    defaultConfig {
        applicationId "com.steelsidekick.steelsidekick"
        minSdkVersion 21
        targetSdkVersion 26
        versionCode 1
        versionName '0.10'
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                cppFlags "-std=c++11 -fexceptions"
                arguments "-DANDROID_STL=c++_shared"
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main.java.srcDirs += "${rootDir}/../SGuitar/swig/java"
        main { assets.srcDirs = ["${rootDir}/../Resources"] }
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
    task runSwig(type: Exec) {
        String osName = System.getProperty("os.name").toLowerCase();
        inputs.dir "${rootDir}/../SGuitar/include"
        outputs.dir "${rootDir}/../SGuitar/swig/java/com/steelsidekick/sguitar"

        if (osName.contains("windows")) {
            // not tested
            workingDir "${rootDir}/../SGuitar/swig"
            commandLine 'cmd', '/c', 'swig', '-java', '-c++', '-cppext', '.cpp', '-package', 'com.steelsidekick.sguitar', '-outdir', 'java/com/steelsidekick/sguitar', '-o', 'cpp/SG.cpp', 'SGuitar.i'
        } else {
            println "Unix build..."
            def swigCommand = '/usr/local/bin/swig'
            workingDir "${rootDir}/../SGuitar/swig"

            if (new File(swigCommand).exists()) {
                commandLine swigCommand, '-java', '-c++', '-cppext', '.cpp', '-package', 'com.steelsidekick.sguitar', '-outdir', 'java/com/steelsidekick/sguitar', '-o', 'cpp/SG.cpp', 'SGuitar.i'
            } else {
                // to change the C++ interface we need swig but try to continue if the swig command is not found
                println 'skipping swig'
                commandLine 'echo'
            }
        }
    }
    preBuild.dependsOn runSwig
    productFlavors {
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:2.0.4'
    implementation 'com.android.support:design:28.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation 'com.android.support:cardview-v7:28.0.0'
}
